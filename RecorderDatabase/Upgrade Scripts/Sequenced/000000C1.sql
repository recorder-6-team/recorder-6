/****** SQL FOR MAKING VIRTUAL ORGANISM AN ACTUAL TABLE  ******/

DROP VIEW [dbo].[VIRTUAL_ORGANISM]

GO


/****** Object:  Table [dbo].[VIRTUAL_ORGANISM]    Script Date: 09/02/2019 08:30:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[VIRTUAL_ORGANISM](
	[TAXON_LIST_ITEM_KEY] [char](16) NOT NULL,
	[TAXON_LIST_VERSION_KEY] [varchar](16) NOT NULL,
	[TAXON_VERSION_KEY] [char](16) NULL,
	[PREFERRED_NAME] [char](16) NULL,
	[TAXON_LIST_VERSION_TO] [int] NULL,
	[Sort_Code] [int] NULL,
	[PARENT] [char](16) NULL,
	[TAXON_RANK_KEY] [char](16) NOT NULL,
	[ENTERED_BY] [char](16) NOT NULL,
	[ENTRY_DATE] [datetime] NOT NULL,
	[SYSTEM_SUPPLIED_DATA] [bit] NOT NULL,
	[Has_Children] [bit] NULL,
 CONSTRAINT [PK_VIRTUAL_ORGANISM] PRIMARY KEY CLUSTERED 
(
	[TAXON_LIST_ITEM_KEY] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF

GO

GRANT SELECT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_AddOnly
GRANT UPDATE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_AddOnly
GRANT DELETE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_AddOnly
GRANT INSERT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_AddOnly

GRANT SELECT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_Administrator
GRANT UPDATE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_Administrator
GRANT DELETE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_Administrator
GRANT INSERT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_Administrator

GRANT SELECT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_FullEdit
GRANT UPDATE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_FullEdit
GRANT DELETE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_FullEdit
GRANT INSERT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_FullEdit

GRANT SELECT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_ReadOnly
GRANT UPDATE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_ReadOnly
GRANT DELETE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_ReadOnly
GRANT INSERT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_ReadOnly

GRANT SELECT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_RecordCardsOnly
GRANT UPDATE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_RecordCardsOnly
GRANT DELETE ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_RecordCardsOnly
GRANT INSERT ON [dbo].[VIRTUAL_ORGANISM]  TO R2k_RecordCardsOnly

 
GO


/****** Object:  StoredProcedure [dbo].[usp_Virtual_Organism_Populate]  Script Date: 09/02/2019 07:51:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*===========================================================================*\
  Description:	
			Procedure which populates the Virtual Organism Table 
			
		    Created:	August 2019 Mike Weideli

  
   ===========================================================================*/
CREATE PROCEDURE [dbo].[usp_Virtual_Organism_Populate] 

AS 

TRUNCATE TABLE VIRTUAL_ORGANISM 

INSERT INTO VIRTUAL_ORGANISM
    ([TAXON_LIST_ITEM_KEY],
	[TAXON_LIST_VERSION_KEY],
	[TAXON_VERSION_KEY],
	[PREFERRED_NAME],
	[TAXON_LIST_VERSION_TO],
	[Sort_Code] ,
	[PARENT],
	[TAXON_RANK_KEY],
	[ENTERED_BY],
	[ENTRY_DATE],
	[SYSTEM_SUPPLIED_DATA],
	[Has_Children])
 
	SELECT NS.RECOMMENDED_TAXON_LIST_ITEM_KEY AS TAXON_LIST_ITEM_KEY,	       'VIRTUAL_ORGANISM' 	AS TAXON_LIST_VERSION_KEY, NS.RECOMMENDED_TAXON_VERSION_KEY                    AS TAXON_VERSION_KEY, NS.RECOMMENDED_TAXON_LIST_ITEM_KEY AS PREFERRED_NAME, NULL AS                    TAXON_LIST_VERSION_TO, O.Sort_Code, NS2.RECOMMENDED_TAXON_LIST_ITEM_KEY AS PARENT, 
           O.ORGANISM_RANK_KEY AS TAXON_RANK_KEY, O.ENTERED_BY, O.ENTRY_DATE, 	                   O.SYSTEM_SUPPLIED_DATA, O.Has_Children
	       FROM dbo.ORGANISM AS O INNER JOIN
             NAMESERVER AS NS ON O.TAXON_VERSION_KEY = NS.INPUT_TAXON_VERSION_KEY AND                      NS.RECOMMENDED_TAXON_VERSION_KEY = 	         NS.INPUT_TAXON_VERSION_KEY
             AND O.REDUNDANT_FLAG IS NULL               
             INNER JOIN
             dbo.ORGANISM AS O2 ON O2.ORGANISM_KEY = O.PARENT_KEY INNER JOIN
             dbo.NAMESERVER AS NS2 ON O2.TAXON_VERSION_KEY = 	NS2.INPUT_TAXON_VERSION_KEY              AND NS.RECOMMENDED_TAXON_VERSION_KEY = 	NS.INPUT_TAXON_VERSION_KEY
	UNION
	SELECT NS.RECOMMENDED_TAXON_LIST_ITEM_KEY AS TAXON_LIST_ITEM_KEY,
           'VIRTUAL_ORGANISM' AS TAXON_LIST_VERSION_KEY, NS.RECOMMENDED_TAXON_VERSION_KEY AS              TAXON_VERSION_KEY,
           NS.RECOMMENDED_TAXON_LIST_ITEM_KEY, NULL AS TAXON_LIST_VERSION_TO, 	                   O.Sort_Code, NULL AS PARENT, O.ORGANISM_RANK_KEY AS TAXON_RANK_KEY, O.ENTERED_BY, 	       O.ENTRY_DATE, O.SYSTEM_SUPPLIED_DATA, O.Has_Children
	       FROM dbo.ORGANISM AS O INNER JOIN
              NAMESERVER AS NS ON O.TAXON_VERSION_KEY = NS.INPUT_TAXON_VERSION_KEY AND
              NS.RECOMMENDED_TAXON_VERSION_KEY =               NS.INPUT_TAXON_VERSION_KEY AND O.PARENT_KEY IS NULL 

GO

GRANT EXECUTE ON [dbo].[usp_Virtual_Organism_Populate] TO PUBLIC


GO
/****** Object:  StoredProcedure [dbo].[usp_Index_Taxon_Name_Apply_Preferred_Taxa]    Script Date: 09/01/2019 23:06:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*===========================================================================*\
  Description:	
			Procedure which populates the preferred taxa column 
			and virtual organism 
  Created:	September 2016 Mike Weideli
  Updated:	August 2019             

  
   ===========================================================================*/
ALTER PROCEDURE [dbo].[usp_Index_Taxon_Name_Apply_Preferred_Taxa] 

AS

UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = 1 
FROM
INDEX_TAXON_NAME ITN
INNER JOIN TAXON_LIST_VERSION TLV
ON TLV.TAXON_LIST_VERSION_KEY = ITN.TAXON_LIST_VERSION_KEY
INNER JOIN TAXON_LIST TL ON TL.TAXON_LIST_KEY = TLV.TAXON_LIST_KEY
WHERE DEPRECATED = 0 AND Allow_Data_Entry = 1
AND PRIORITY = (SELECT MIN(Priority) FROM TAXON_LIST
INNER JOIN TAXON_LIST_VERSION ON
TAXON_LIST_VERSION.TAXON_LIST_KEY = TAXON_LIST.TAXON_LIST_KEY 
INNER JOIN INDEX_TAXON_NAME ON INDEX_TAXON_NAME.TAXON_LIST_VERSION_KEY
= TAXON_LIST_VERSION.TAXON_LIST_VERSION_KEY
WHERE DEPRECATED = 0 AND Allow_Data_Entry = 1 
AND INDEX_TAXON_NAME.RECOMMENDED_TAXON_VERSION_KEY = ITN.RECOMMENDED_TAXON_VERSION_KEY
AND  INDEX_TAXON_NAME.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME )

UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = -1
FROM INDEX_TAXON_NAME ITN
WHERE PREFERRED_TAXA = 0 AND 
EXISTS (SELECT * FROM INDEX_TAXON_NAME ITN2 WHERE
ITN2.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME 
AND ITN2.RECOMMENDED_TAXON_VERSION_KEY =
ITN.RECOMMENDED_TAXON_VERSION_KEY AND ITN2.PREFERRED_TAXA = 1 )  




UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = 2 
FROM
INDEX_TAXON_NAME ITN
INNER JOIN TAXON_LIST_VERSION TLV
ON TLV.TAXON_LIST_VERSION_KEY = ITN.TAXON_LIST_VERSION_KEY
INNER JOIN TAXON_LIST TL ON TL.TAXON_LIST_KEY = TLV.TAXON_LIST_KEY
WHERE Deprecated = 1 AND Allow_Data_Entry = 1  AND PREFERRED_TAXA = 0 
AND PRIORITY = (SELECT MIN(Priority) FROM TAXON_LIST
INNER JOIN TAXON_LIST_VERSION ON
TAXON_LIST_VERSION.TAXON_LIST_KEY = TAXON_LIST.TAXON_LIST_KEY 
INNER JOIN INDEX_TAXON_NAME ON INDEX_TAXON_NAME.TAXON_LIST_VERSION_KEY
= TAXON_LIST_VERSION.TAXON_LIST_VERSION_KEY
WHERE Deprecated = 1 AND Allow_Data_Entry = 1  AND PREFERRED_TAXA = 0 
AND INDEX_TAXON_NAME.RECOMMENDED_TAXON_VERSION_KEY = ITN.RECOMMENDED_TAXON_VERSION_KEY
AND  INDEX_TAXON_NAME.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME )
 
 

UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = -2
FROM INDEX_TAXON_NAME ITN
WHERE PREFERRED_TAXA = 0 AND 
EXISTS (SELECT * FROM INDEX_TAXON_NAME ITN2 WHERE
ITN2.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME 
AND ITN2.RECOMMENDED_TAXON_VERSION_KEY =
ITN.RECOMMENDED_TAXON_VERSION_KEY AND ITN2.PREFERRED_TAXA = 2 )  

UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = 3 
FROM
INDEX_TAXON_NAME ITN
INNER JOIN TAXON_LIST_VERSION TLV
ON TLV.TAXON_LIST_VERSION_KEY = ITN.TAXON_LIST_VERSION_KEY
INNER JOIN TAXON_LIST TL ON TL.TAXON_LIST_KEY = TLV.TAXON_LIST_KEY
WHERE  PREFERRED_TAXA = 0 
AND PRIORITY = (SELECT MIN(Priority) FROM TAXON_LIST
INNER JOIN TAXON_LIST_VERSION ON
TAXON_LIST_VERSION.TAXON_LIST_KEY = TAXON_LIST.TAXON_LIST_KEY 
INNER JOIN INDEX_TAXON_NAME ON INDEX_TAXON_NAME.TAXON_LIST_VERSION_KEY
= TAXON_LIST_VERSION.TAXON_LIST_VERSION_KEY
WHERE PREFERRED_TAXA = 0 
AND INDEX_TAXON_NAME.RECOMMENDED_TAXON_VERSION_KEY = ITN.RECOMMENDED_TAXON_VERSION_KEY
AND  INDEX_TAXON_NAME.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME )
 
 

UPDATE INDEX_TAXON_NAME SET PREFERRED_TAXA = -3
FROM INDEX_TAXON_NAME ITN
WHERE PREFERRED_TAXA = 0 AND 
EXISTS (SELECT * FROM INDEX_TAXON_NAME ITN2 WHERE
ITN2.OUTPUT_TAXON_NAME = ITN.OUTPUT_TAXON_NAME 
AND ITN2.RECOMMENDED_TAXON_VERSION_KEY =
ITN.RECOMMENDED_TAXON_VERSION_KEY AND ITN2.PREFERRED_TAXA = 3 ) 

EXECUTE [dbo].[usp_Virtual_Organism_Populate] 

GO


/****** Object:  View [dbo].[VIRTUAL_COLEOPTE]    Script Date: 09/02/2019 08:04:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER VIEW [dbo].[VIRTUAL_COLEOPTE]
AS
SELECT TAXON_LIST_ITEM_KEY,'VIRTUAL_COLEOPTE' AS TAXON_LIST_VERSION_KEY,
TAXON_VERSION_KEY,PREFERRED_NAME,
TAXON_LIST_VERSION_TO,Sort_Code,PARENT,TAXON_RANK_KEY,ENTERED_BY,
ENTRY_DATE,SYSTEM_SUPPLIED_DATA,Has_Children
FROM VIRTUAL_ORGANISM
INNER JOIN  dbo.Index_Virtual_Lists AS IVL ON IVL.Taxon_List_key = 'VIRTUAL_COLEOPTE' 
AND Sort_Code  >= IVL.Start_Sort_Code
 AND Sort_Code  <= IVL.End_Sort_Code



